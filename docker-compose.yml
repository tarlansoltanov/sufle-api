version: '3.8'

services:
  db:
    image: postgres:alpine
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data/
    env_file:
      - ./config/.env
    networks:
      - webdata

  redis:
    image: redis:alpine
    restart: always
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD --port $$REDIS_PORT"
    volumes:
      - redisdata:/data
    env_file:
      - ./config/.env
    networks:
      - webcache

  web:
    <<: &web
      image: project:dev
      build:
        target: development
        context: .
        dockerfile: ./docker/django/Dockerfile
      restart: always
      command: python -Wd manage.py runserver 0.0.0.0:8000
      volumes:
        - ./logs:/app/logs:rw
      env_file:
        - ./config/.env
      environment:
        - DJANGO_ENV=development
      depends_on:
        - db
        - redis
      networks:
        - webdata
        - webcache
      healthcheck:
        test: |
          /usr/bin/test $$(
            /usr/bin/curl --fail http://localhost:8000/health/?format=json
            --write-out "%{http_code}" --silent --output /dev/null
          ) -eq 200
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 30s

volumes:
  pgdata:
  redisdata:

networks:
  webdata:
  webcache:
